---
const { link = '', length = 1, pageCurrent = 1 } = Astro.props;

const totalPages = Array.from({ length })
const limitPagination = length <=7 ? false : true

const pathname = Astro.url.pathname
let search = Astro.url.search

let searchParams = new URLSearchParams(search)
searchParams.delete("page")
search = searchParams.toString().length > 0 ? '?' + searchParams.toString() : ''

const union = search == '' ? '?' : '&'

---

<nav class=" sticky right-2 bottom-0 overflow-hidden">
  <ul class="flex items-center -space-x-px h-6 text-sm">



    {
      totalPages.length > 1 && pageCurrent > 1
      ?
        <li>
          <a href="#" class="flex items-center justify-center px-3 h-6 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
            <span class="sr-only">Previous</span>
            <svg class="w-2.5 h-2.5 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
            </svg>
          </a>
        </li>
      :
        ''
    }

    {limitPagination
    ?
      ''

    :
      totalPages.map((item, index)=> (
        <li>
          <a href={`${pathname}${search}${union}page=${index+1}`} class={`flex items-center justify-center px-3 h-6 leading-tight ${index+1 == pageCurrent ? 'text-colorApp-600 border border-colorApp-300 bg-colorApp-50 hover:bg-colorApp-100 hover:text-colorApp-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white' : 'text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}`}>
            {index+1}
          </a>
        </li>

      ))
    }


    {
      totalPages.length > 0 && totalPages.length > 1 && pageCurrent < totalPages.length
      ?
      <li>
          <a href="#" class="flex items-center justify-center px-3 h-6 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
            <span class="sr-only">Next</span>
            <svg class="w-2.5 h-2.5 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
            </svg>
          </a>
        </li>
      :
        ''
    }


  </ul>
</nav>
